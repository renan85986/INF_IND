FUNCTION_BLOCK ControleCarregamento
VAR
    tempo: TIME := T#0s;
    inicio_carregamento: TIME;
    INICIAR_CARREGAMENTO: BOOL := FALSE;
    ALARME_CARREGAMENTO: BOOL := FALSE;
    CAPACIDADE_CAMINHAO: REAL := 0.0; // Inicialização para um valor padrão
    CAMINHAO_CAPAZ: BOOL := FALSE;
    CAMINHAO_POSICIONADO: BOOL := FALSE;
    PESO_SILO1: REAL := 0.0; // Inicialização para um valor padrão
    PESO_SILO2: REAL := 0.0; // Inicialização para um valor padrão
    VENTILACAO_SILO1: BOOL := FALSE;
    VENTILACAO_SILO2: BOOL := FALSE;
    TRANSPORTADOR_ENTRADA_ON: BOOL := FALSE;
    SENSOR_ALIMENTADOR_MOEGA1: BOOL := FALSE;
    SENSOR_ALIMENTADOR_MOEGA2: BOOL := FALSE;
    ALIMENTADOR_SAIDA_ON: BOOL := FALSE;
    TRANSPORTADOR_SAIDA_ON: BOOL := FALSE;
    MOEGA_PESAGEM_ON: BOOL := FALSE;
    ALIMENTADOR_MOEGA1_ON: BOOL := FALSE;
    ALIMENTADOR_MOEGA2_ON: BOOL := FALSE;
    ALARME_TRANSPORTADOR_ENTRADA: BOOL := FALSE;
    ALARME_TRANSPORTADOR_SAIDA: BOOL := FALSE;
    ALARME_VENTILACAO_SILO1: BOOL := FALSE;
    ALARME_VENTILACAO_SILO2: BOOL := FALSE;
    ALARME_ALIMENTADOR_MOEGA1: BOOL := FALSE;
    ALARME_ALIMENTADOR_MOEGA2: BOOL := FALSE;
    ALARME_ALIMENTADOR_SAIDA: BOOL := FALSE;
    ALARME_MOEGA: BOOL := FALSE;
END_VAR

IF (CAPACIDADE_CAMINHAO >= 200) AND (CAPACIDADE_CAMINHAO <= 800)THEN
	CAMINHAO_CAPAZ := TRUE;
ELSE
	CAMINHAO_CAPAZ := FALSE;
END_IF

IF CAMINHAO_CAPAZ AND CAMINHAO_POSICIONADO THEN //VERIFICA SE O CAMINHAO TEM CAPACIDADE E ESTÁ POSICIONADO
	IF CMD_INICIAR_CARREGAMENTO THEN            //SE RECEBER COMANDO DO OPERADOR  
  		 IF (NOT VENTILACAO_SILO2) AND (NOT VENTILACAO_SILO1) AND (NOT TRANSPORTADOR_ENTRADA_ON) AND (NOT SENSOR_ALIMENTADOR_MOEGA1) AND (NOT SENSOR_ALIMENTADOR_MOEGA2) AND (NOT ALIMENTADOR_SAIDA_ON) AND (NOT TRANSPORTADOR_SAIDA_ON) AND (NOT MOEGA_PESAGEM_ON) AND (NOT ALIMENTADOR_MOEGA1) AND (NOT ALIMENTADOR_MOEGA2) THEN
			 IF (NOT ALARME_TRANSPORTADOR_ENTRADA) AND (NOT ALARME_TRANSPORTADOR_SAIDA) AND (NOT ALARME_VENTILACAO_SILO1) AND (NOT ALARME_VENTILACAO_SILO2) AND (NOT ALARME_ALIMENTADOR_MOEGA1)AND (NOT ALARME_ALIMENTADOR_MOEGA2) AND (NOT ALARME_ALIMENTADOR_SAIDA) AND (NOT ALARME_MOEGA) THEN
				 IF (PESO_SILO1 - 100) + (PESO_SILO2 - 100) >= CAPACIDADE_CAMINHAO THEN
                    INICIAR_CARREGAMENTO := TRUE;
                ELSE
                    ALARME_CARREGAMENTO := TRUE;
					INICIAR_CARREGAMENTO := FALSE;
                END_IF
            END_IF
        END_IF
    END_IF
END_IF

IF INICIAR_CARREGAMENTO THEN
    IF (PESO_SILO1 >= PESO_SILO2) THEN
        VENTILACAO_SILO1 := TRUE;
        ALIMENTADOR_SAIDA_ON := TRUE;
        TRANSPORTADOR_SAIDA_ON := TRUE;
        MOEGA_PESAGEM_ON := TRUE;
        ALIMENTADOR_MOEGA1 := TRUE;

        // Esperar até que a pesagem atinja o valor informado
        IF (PESO_MOEGA >= CAPACIDADE_CAMINHAO) THEN
            ALIMENTADOR_MOEGA1 := FALSE;
            VENTILACAO_SILO1 := FALSE;
            ALIMENTADOR_SAIDA_ON := FALSE;
            TRANSPORTADOR_SAIDA_ON := FALSE;
            MOEGA_PESAGEM_ON := FALSE;
			INICIAR_CARREGAMENTO := FALSE;
        ELSE
            IF (NIVEL_BAIXO_SILO1) THEN
                ALIMENTADOR_MOEGA1 := FALSE;
                VENTILACAO_SILO1 := FALSE;
                ALIMENTADOR_SAIDA_ON := FALSE;
                TRANSPORTADOR_SAIDA_ON := FALSE;
                MOEGA_PESAGEM_ON := FALSE;

                ALIMENTADOR_MOEGA2 := TRUE;
                VENTILACAO_SILO2 := TRUE;
                ALIMENTADOR_SAIDA_ON := TRUE;
                TRANSPORTADOR_SAIDA_ON := TRUE;
                MOEGA_PESAGEM_ON := TRUE;

                IF (PESO_MOEGA >= CAPACIDADE_CAMINHAO) THEN
                    ALIMENTADOR_MOEGA2 := FALSE;
					INICIAR_CARREGAMENTO := FALSE;
                END_IF
            END_IF
        END_IF

        // Controle de tempo e desativação dos equipamentos
        inicio_carregamento := TIME();
        IF (TIME() - inicio_carregamento >= T#1S) THEN
            MOEGA_PESAGEM_ON := FALSE;
        END_IF
        IF (TIME() - inicio_carregamento >= T#2S) THEN
            TRANSPORTADOR_SAIDA_ON := FALSE;
        END_IF
        IF (TIME() - inicio_carregamento >= T#3S) THEN
            ALIMENTADOR_SAIDA_ON := FALSE;
        END_IF
        IF (TIME() - inicio_carregamento >= T#5S) THEN
            VENTILACAO_SILO1 := FALSE;
        END_IF

    ELSE
        VENTILACAO_SILO2 := TRUE;
        ALIMENTADOR_SAIDA_ON := TRUE;
        TRANSPORTADOR_SAIDA_ON := TRUE;
        MOEGA_PESAGEM_ON := TRUE;
        ALIMENTADOR_MOEGA2 := TRUE;

        // Esperar até que a pesagem atinja o valor informado
        IF (PESO_MOEGA >= CAPACIDADE_CAMINHAO) THEN
            ALIMENTADOR_MOEGA2 := FALSE;
            VENTILACAO_SILO2 := FALSE;
            ALIMENTADOR_SAIDA_ON := FALSE;
            TRANSPORTADOR_SAIDA_ON := FALSE;
            MOEGA_PESAGEM_ON := FALSE;
			INICIAR_CARREGAMENTO := FALSE;
        ELSE
            IF (NIVEL_BAIXO_SILO2) THEN
                ALIMENTADOR_MOEGA2 := FALSE;
                VENTILACAO_SILO2 := FALSE;
                ALIMENTADOR_SAIDA_ON := FALSE;
                TRANSPORTADOR_SAIDA_ON := FALSE;
                MOEGA_PESAGEM_ON := FALSE;

                ALIMENTADOR_MOEGA1 := TRUE;
                VENTILACAO_SILO1 := TRUE;
                ALIMENTADOR_SAIDA_ON := TRUE;
                TRANSPORTADOR_SAIDA_ON := TRUE;
                MOEGA_PESAGEM_ON := TRUE;

                IF (PESO_MOEGA >= CAPACIDADE_CAMINHAO) THEN
                    ALIMENTADOR_MOEGA1 := FALSE;
					INICIAR_CARREGAMENTO := FALSE;
                END_IF
            END_IF
        END_IF

        // Controle de tempo e desativação dos equipamentos
        inicio_carregamento := TIME();
        IF (TIME() - inicio_carregamento >= T#1S) THEN
            MOEGA_PESAGEM_ON := FALSE;
        END_IF
        IF (TIME() - inicio_carregamento >= T#2S) THEN
            TRANSPORTADOR_SAIDA_ON := FALSE;
        END_IF
        IF (TIME() - inicio_carregamento >= T#3S) THEN
            ALIMENTADOR_SAIDA_ON := FALSE;
        END_IF
        IF (TIME() - inicio_carregamento >= T#5S) THEN
            VENTILACAO_SILO2 := FALSE;
        END_IF
    END_IF
END_IF
