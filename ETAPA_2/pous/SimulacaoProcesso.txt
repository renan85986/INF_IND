PROGRAM SimulacaoProcesso
VAR_INPUT
    TRANSPORTADOR_ENTRADA_ON: BOOL;
    TRANSPORTADOR_SAIDA_ON: BOOL;
    VENTILACAO_SILO1: BOOL;
    VENTILACAO_SILO2: BOOL;
    ALIMENTADOR_MOEGA1_ON: BOOL;
    ALIMENTADOR_MOEGA2_ON: BOOL;
    CAMINHAO_POSICIONADO: BOOL;
    VAGAO_POSICIONADO: BOOL;
END_VAR

VAR_OUTPUT
    PESO_SILO1: REAL;
    PESO_SILO2: REAL;
    PESO_MOEGA: REAL;
    SENSOR_GRAO_ALIMENTADOR_MOEGA1: BOOL;
    SENSOR_GRAO_ALIMENTADOR_MOEGA2: BOOL;
    NIVEL_ALTO_SILO1: BOOL;
    NIVEL_ALTO_SILO2: BOOL;
    NIVEL_BAIXO_SILO1: BOOL;
    NIVEL_BAIXO_SILO2: BOOL;
    PESO_TRANSPORTADOR_ENTRADA: REAL;
    PESO_TRANSPORTADOR_SAIDA: REAL;
END_VAR

VAR
    taxa_transferencia: REAL := 50.0; // Taxa de transferência dos transportadores (kg/s)
    tempo_atual: TIME;
    tempo_anterior: TIME := T#0s;
    delta_t: REAL;
END_VAR

// Calcular delta_t
tempo_atual := TIME();
delta_t := TIME_TO_REAL(tempo_atual - tempo_anterior) / 1000.0; // Converter TIME para segundos

// Inicializar variáveis de saída
PESO_TRANSPORTADOR_ENTRADA := 0.0;
PESO_TRANSPORTADOR_SAIDA := 0.0;

// Simular o comportamento dos silos e transportadores
IF TRANSPORTADOR_ENTRADA_ON THEN
    PESO_TRANSPORTADOR_ENTRADA := taxa_transferencia * delta_t;
    IF ALIMENTADOR_MOEGA1_ON THEN
        PESO_SILO1 := PESO_SILO1 + PESO_TRANSPORTADOR_ENTRADA;
        PESO_MOEGA := PESO_MOEGA - PESO_TRANSPORTADOR_ENTRADA;
    ELSIF ALIMENTADOR_MOEGA2_ON THEN
        PESO_SILO2 := PESO_SILO2 + PESO_TRANSPORTADOR_ENTRADA;
        PESO_MOEGA := PESO_MOEGA - PESO_TRANSPORTADOR_ENTRADA;
    END_IF
END_IF

IF TRANSPORTADOR_SAIDA_ON THEN
    PESO_TRANSPORTADOR_SAIDA := taxa_transferencia * delta_t;
    IF ALIMENTADOR_MOEGA1_ON THEN
        PESO_MOEGA := PESO_MOEGA + PESO_TRANSPORTADOR_SAIDA;
        PESO_SILO1 := PESO_SILO1 - PESO_TRANSPORTADOR_SAIDA;
    ELSIF ALIMENTADOR_MOEGA2_ON THEN
        PESO_MOEGA := PESO_MOEGA + PESO_TRANSPORTADOR_SAIDA;
        PESO_SILO2 := PESO_SILO2 - PESO_TRANSPORTADOR_SAIDA;
    END_IF
END_IF

// Atualizar sensores de grãos
SENSOR_GRAO_ALIMENTADOR_MOEGA1 := (PESO_SILO1 > 0);
SENSOR_GRAO_ALIMENTADOR_MOEGA2 := (PESO_SILO2 > 0);

// Verificar níveis altos e baixos dos silos
NIVEL_ALTO_SILO1 := (PESO_SILO1 >= 2400);
NIVEL_ALTO_SILO2 := (PESO_SILO2 >= 2400);
NIVEL_BAIXO_SILO1 := (PESO_SILO1 <= 100);
NIVEL_BAIXO_SILO2 := (PESO_SILO2 <= 100);

// Atualizar o tempo anterior
tempo_anterior := tempo_atual;
